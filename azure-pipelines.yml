# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

parameters:
- name: pool
  displayName: hosted agents
  type: boolean
  default: false  
- name: image
  displayName: Pool Image
  type: string
  default: ubuntu-latest
  values:
  - windows-2019
  - ubuntu-latest
- name: agent
  displayName: My agent
  type: string
  default: Windows
  values:
    - Windows
    - Linux

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '5.x'

trigger: none

jobs:
- ${{ if not(eq(parameters.pool, true)) }}:
  - job: pool
    displayName: Self-hosted agents pool
    pool:
      name: MyPools
      demands:  
      - ${{ if eq(parameters.agent, 'Windows') }}:
        - agent.os -equals Windows_NT
      - ${{ if eq(parameters.agent, 'Linux') }}:
        - agent.os -equals Linux

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotnetSdkVersion)'
      inputs:
        packageType: sdk
        version: '$(dotnetSdkVersion)'
    - task: Npm@1
      inputs:
        customCommand: 'install --save-dev'
    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
      displayName: 'Compile Sass assets'
    - ${{ if eq(parameters.agent, 'Windows') }}:
      - script: 'node_modules\gulp\node_modules\.bin\gulp'
        displayName: 'gulp task'
    - ${{ if not(eq(parameters.agent, 'Windows')) }}:
      - task: gulp@1
        displayName: 'gulp task'
    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir)
    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
    - template: templates/build.yml
      parameters:
        buildConfiguration: 'Debub'
    - template: templates/build.yml
      parameters:
        buildConfiguration: 'Release'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      condition: succeeded()

- ${{ if eq(parameters.pool, true) }}:
  - job: pool
    displayName: Hosted agents pool
    pool:
      vmImage: ${{ parameters.image }}
      demands:  
      - npm

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotnetSdkVersion)'
      inputs:
        packageType: sdk
        version: '$(dotnetSdkVersion)'
    - task: Npm@1
      inputs:
        customCommand: 'install --save-dev'
    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
      displayName: 'Compile Sass assets'
    - task: gulp@1
      displayName: 'gulp task'
    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir)
    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
    - template: templates/build.yml
      parameters:
        buildConfiguration: 'Debub'
    - template: templates/build.yml
      parameters:
        buildConfiguration: 'Release'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      condition: succeeded()

